group_by(gender) %>%
summarise((mean_income = mean(income))) -> gender_income
# 데이터의 시각화
ggplot(data = gender_income,
aes(x= gender, y = mean_income)) + geom_col()
gender_income
# 데이터의 시각화
ggplot(data = gender_income,
aes(x= gender, y = mean_income))
View(gender_income)
welfare_copy %>%
filter(!is.na(income)) %>%
group_by(gender) %>%
summarise(mean_income = mean(income)) -> gender_income
gender_income
# 데이터의 시각화
ggplot(data = gender_income,
aes(x= gender, y = mean_income))
# 데이터의 시각화
ggplot(data = gender_income,
aes(x= gender, y = mean_income))+ geom_col()
welfare_copy %>%
filter(!is.na(income)) %>%
group_by(gender)
welfare_copy %>% group_by(birth)
2023 - welfare_copy$birth
2023 - welfare_copy$birth + 1
welfare_copy %>% mutate(age = 2023 - birth + 1)
welfare_copy %>% mutate(age = 2023 - birth + 1) -> welfare_copy
welfare_copy %>% group_by(age)
welfare_copy %>% group_by(age) %>% summarise(age_mean = mean(income))
welfare_copy %>% mutate(age = 2023 - birth + 1) -> welfare_copy
table(is.na(welfare_copy$age))
welfare_copy %>% mutate(age = 2023 - birth + 1)
welfare_copy %>% mutate(age = 2023 - birth + 1) -> welfare_copy
table(is.na(welfare_copy$age))
welfare_copy %>% group_by(age) %>% summarise(age_mean = mean(income), na.rm=T)
welfare_copy %>% group_by(age) %>% summarise(age_mean = mean(income, na.rm=T))
welfare_copy %>% group_by(age) %>% summarise(age_mean = mean(income))
# 결측치를 확인
table(is.na(welfare_copy$income))
welfare_copy %>% group_by(age) %>% summarise(age_mean = mean(income, na.rm = T))
welfare_copy %>% group_by(age) %>% summarise(age_mean = mean(income))
welfare_copy %>% group_by(age) %>% summarise(age_mean = mean(income)) -> age_income
ggplot(data = age_income,
aes(x= age, y = age_mean))+ geom_col()
ggplot(data = age_income,
aes(x= age, y = age_mean))+ geom_line()
ggplot(data = head(age_income),
aes(x= age, y = age_mean))+ geom_line()
age_income %>% arrange(age_mean)
age_income %>% arrange(-age_mean)
welfare_copy %>%
filter(!is.na(income)) %>%
welfare_copy %>% mutate(age = 2023 - birth + 1)
welfare_copy %>%
filter(!is.na(income)) %>%
welfare_copy %>% mutate(age = 2023 - birth + 1)
welfare_copy %>%
filter(!is.na(income)) %>%
mutate(age = 2023 - birth + 1)
welfare_copy %>%
filter(!is.na(income)) %>%
mutate(age = 2023 - birth + 1) -> welfare_copy
table(is.na(welfare_copy$age))
table(is.na(welfare_copy$income))
welfare_copy %>% group_by(age) %>% summarise(age_mean = mean(income)) -> age_income
ggplot(data = head(age_income),
aes(x= age, y = age_mean))+ geom_line()
age_income %>% arrange(age_mean)
age_income %>% arrange(-age_mean)
ggplot(data = age_income,
aes(x= age, y = age_mean))+ geom_line()
age_income %>% arrange(-age_mean) %>% head(5)
welfare_copy %>%
filter(!is.na(income)) %>%
mutate(age = 2023 - birth + 1) %>%
group_by(age) %>%
summarise(age_mean = mean(income)) -> age_income
welfare_copy %>%
filter(!is.na(income)) %>%
mutate(age = 2023 - birth + 1) %>%
group_by(age) %>%
summarise(income_mean = mean(income)) -> age_income
ggplot(data = age_income,
aes(x= age, y = income_mean))+ geom_line()
age_income %>% arrange(-age_mean) %>% head(5)
age_income %>% arrange(-income_mean) %>% head(5)
age_income %>% arrange(income_mean)
welfare_copy %>%
filter(!is.na(income)) %>%
mutate(age = 2015 - birth + 1) %>%
group_by(age) %>%
summarise(income_mean = mean(income)) -> age_income
table(is.na(welfare_copy$age))
table(is.na(welfare_copy$income))
# 시각화
ggplot(data = age_income,
aes(x= age, y = income_mean))+ geom_line()
age_income %>% arrange(-income_mean) %>% head(5)
welfare_copy %>%
filter(!is.na(income))
age_income %>% arrange(-income_mean) %>% head(5)
ifelse(welfare_copy$age < 30, 'young',
ifelse(welfare_copy$age < 60, 'middle', 'old'))
ifelse(welfare_copy$age < 30, 'young',
ifelse(welfare_copy$age < 60, 'middle', 'old')) ->welfare_copy$ageg
welfare_copy %>% group_by(ageg) %>% summarise(mean_ageg = mean(ageg))
group_by(ageg) %>%
summarise(mean_income = mean(income))
ifelse(welfare_copy$age < 30, 'young',
ifelse(welfare_copy$age < 60, 'middle', 'old')) ->welfare_copy$ageg
welfare_copy %>%
filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income))
welfare_copy %>%
filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income)) -> ageg_mean
ggplot(data = ageg_mean,
aes(x= ageg, y = mean_income))+ geom_col()
# 연령대를 추가
# ageg 나이가 30미만이면 'young'
# 30 이상 60 미만이면 'middle'
# 60 이상이면 'old'
# 연령대별 월급의 평균이 어떻게 되는가?
# 시각화(막대그래프)
View(welfare_copy)
scale_x_discrete(limits = C('young', 'middle', 'old')
ggplot(data = ageg_mean,
ggplot(data = ageg_mean,
aes(x= ageg, y = mean_income))+ geom_col() +
scale_x_discrete(limits = c('young', 'middle', 'old'))
# 연령대, 성별 월급 평균
welfare_copy %>%
filter(!is.na(income)) %>%
group_by(ageg, gender) %>%
summarise(income_mean = mean(income))
# 연령대, 성별 월급 평균
welfare_copy %>%
filter(!is.na(income)) %>%
group_by(ageg, gender) %>%
summarise(income_mean = mean(income)) -> ageg_gender_income
ggplot(data = ageg_gender_income,
aes(x= ageg, y= income_mean, fill=gender)) +
geom_col()
ggplot(data = ageg_gender_income,
aes(x= ageg, y= income_mean, fill=gender)) +
geom_col() +
scale_x_discrete(limits = c('young', 'middle', 'old'))
ggplot(data = ageg_gender_income,
aes(x= ageg, y= income_mean, fill=gender)) +
geom_col(position = 'dodge') +
scale_x_discrete(limits = c('young', 'middle', 'old'))
# 나이, 성별 월급 평균을 비교
welfare_copy %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(income_mean = mean(income))
ggplot(data = ageg_gender_income, aes(x=age, y= income_mean)) +
geom_line()
# 나이, 성별 월급 평균을 비교
welfare_copy %>%
filter(!is.na(income)) %>%
group_by(age, gender) %>%
summarise(income_mean = mean(income))-> age_gender_income
ggplot(data = ageg_gender_income, aes(x=age, y= income_mean)) +
geom_line()
ggplot(data = age_gender_income, aes(x=age, y= income_mean)) +
geom_line()
ggplot(data = age_gender_income,
aes(x=age, y= income_mean, color = gender)) +
geom_line()
## 직업별로 평균 월급이 어떻게 되는가?
welfare_copy$code_job
list_job =read_excel("csv/csv/Koweps_Codebook.xlsx", sheet=2)
#list_job =
read_excel("csv/csv/Koweps_Codebook.xlsx", sheet=2)
#list_job =
read_excel("csv/csv/Koweps_Codebook.xlsx", sheet=2, col_names= T)
left_join(welfare_copy,list_job, id='code_job')
left_join(welfare_copy,list_job, by='code_job')
left_join(welfare_copy,list_job, by='code_job') -> welfare_copy
View(welfare_copy)
## 직업별 평균 월급
## 직업이 결측치이고 월급이 결측치인 경우 제외
## 직업 기준으로 그룹화
## 월급의 평균 값
welfare_copy %>% filter(!is.na(job))
## 직업별 평균 월급
## 직업이 결측치이고 월급이 결측치인 경우 제외
## 직업 기준으로 그룹화
## 월급의 평균 값
welfare_copy %>% filter(is.na(job))
## 직업별 평균 월급
## 직업이 결측치이고 월급이 결측치인 경우 제외
## 직업 기준으로 그룹화
## 월급의 평균 값
welfare_copy %>% filter(is.na(job) & is.na(income))
## 직업별 평균 월급
## 직업이 결측치이고 월급이 결측치인 경우 제외
## 직업 기준으로 그룹화
## 월급의 평균 값
welfare_copy %>% filter(is.na(job) & is.na(income))
## 직업별 평균 월급
## 직업이 결측치이고 월급이 결측치인 경우 제외
## 직업 기준으로 그룹화
## 월급의 평균 값
welfare_copy %>% filter(is.na(job) & is.na(income))
View(welfare_copy)
## 직업별 평균 월급
## 직업이 결측치이고 월급이 결측치인 경우 제외
## 직업 기준으로 그룹화
## 월급의 평균 값
welfare %>%
select(gender, birth, marriage, religion, income, code_job, code_region) -> welfare_copy
welfare_copy$code_job
list_job =read_excel("csv/csv/Koweps_Codebook.xlsx", sheet=2, col_names= T)
left_join(welfare_copy,list_job, by='code_job') -> welfare_copy
View(welfare_copy)
welfare_copy %>%
filter(is.na(job) & is.na(income))
welfare_copy %>%
filter(!is.na(job) | !is.na(income)) %>% group_by(job) %>% summarise(mean_income = mean(income))
welfare_copy %>%
filter(!(is.na(job) & is.na(income))) %>% group_by(job) %>% summarise(mean_income = mean(income))
welfare_copy %>%
filter(!(is.na(job) & is.na(income))) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(-mean_income)
welfare_copy %>%
filter(!(is.na(job) & is.na(income))) %>%
group_by(job) %>%
summarise(mean_income = mean(income))
welfare_copy %>%
filter(!(is.na(job) & is.na(income))) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) -> job_mean
# 평균 월급이 높은 상위 직업군 10개를 시각화
# 낮은 하위 직업군 10개를 시각화
ggplot(data = head(job_mean,10),
aes(x=job, y= mean_income)) +
geom_col()
job_mean %>% arrange(-mean_income)
job_mean %>% arrange(-mean_income) -> job_mean
# 평균 월급이 높은 상위 직업군 10개를 시각화
# 낮은 하위 직업군 10개를 시각화
ggplot(data = head(job_mean,10),
aes(x=job, y= mean_income)) +
geom_col()
job_mean %>% arrange(mean_income) -> job_mean
ggplot(data = head(job_mean,10),
aes(x=job, y= mean_income)) +
geom_col()
welfare %>%
select(gender, birth, marriage, religion, income, code_job, code_region) -> welfare_copy
welfare_copy$code_job
list_job =read_excel("csv/csv/Koweps_Codebook.xlsx", sheet=2, col_names= T)
left_join(welfare_copy,list_job, by='code_job') -> welfare_copy
View(welfare_copy)
welfare_copy %>%
filter(!(is.na(job) & is.na(income))) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) -> job_mean
job_mean %>% arrange(-mean_income) -> job_mean
# 평균 월급이 높은 상위 직업군 10개를 시각화
# 낮은 하위 직업군 10개를 시각화
ggplot(data = head(job_mean,10),
aes(x=job, y= mean_income)) +
geom_col()
ggplot(data = tail(job_mean,10),
aes(x=job, y= mean_income)) +
geom_col()
# 평균 월급이 높은 상위 직업군 10개를 시각화
# 낮은 하위 직업군 10개를 시각화
ggplot(data = head(job_mean,10),
aes(x=job, y= mean_income)) +
geom_col()
welfare %>%
select(gender, birth, marriage, religion, income, code_job, code_region) -> welfare_copy
welfare_copy$code_job
list_job =read_excel("csv/csv/Koweps_Codebook.xlsx", sheet=2, col_names= T)
left_join(welfare_copy,list_job, by='code_job') -> welfare_copy
View(welfare_copy)
welfare_copy %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) -> job_mean
job_mean %>% arrange(-mean_income) -> job_mean
# 평균 월급이 높은 상위 직업군 10개를 시각화
# 낮은 하위 직업군 10개를 시각화
ggplot(data = head(job_mean,10),
aes(x=job, y= mean_income)) +
geom_col()
ggplot(data = tail(job_mean,10),
aes(x=job, y= mean_income)) +
geom_col()
# 평균 월급이 높은 상위 직업군 10개를 시각화
# 낮은 하위 직업군 10개를 시각화
ggplot(data = head(job_mean,10),
aes(x=job, y= mean_income)) +
geom_col()
ggplot(data = head(job_mean,10),
aes(x=job, y= mean_income)) +
geom_col() +
coord_flip()
ggplot(data = head(job_mean,10),
aes(x=reorder(job, mean_income), y= mean_income)) +
geom_col() +
coord_flip() # 눕히기
ggplot(data = tail(job_mean,10),
aes(x=job, y= mean_income)) +
geom_col()
ggplot(data = tail(job_mean,10),
aes(x=reorder(job, mean_income), y= mean_income)) +
geom_col() +
coord_flip() # 눕히기
ggplot(data = head(job_mean,10),
aes(x=reorder(job, mean_income), y= mean_income)) +
geom_col() +
coord_flip() # 눕히기
ggplot(data = tail(job_mean,10),
aes(x=reorder(job, mean_income), y= mean_income)) +
geom_col() +
coord_flip() # 눕히기
# 성별 직업의 빈도수를 체크하여 상위 10개를 출력
welfare_copy %>%
filter(!is.na(job)) %>%
group_by(gender, job) %>%
summarise(count = n()) %>%
arrange(-count) %>%
head(10)
# 성별 직업의 빈도수를 체크하여 상위 10개를 출력
welfare_copy %>%
filter(!is.na(job) & gender == 'male') %>%
group_by(gender, job) %>%
summarise(count = n()) %>%
arrange(-count) %>%
head(10) -> male_top10
male_top10
male_top10
# 성별 직업의 빈도수를 체크하여 상위 10개를 출력
welfare_copy %>%
filter(!is.na(job) & gender == 'male') %>%
group_by(job) %>%
summarise(count = n()) %>%
arrange(-count) %>%
head(10) -> male_top10
male_top10
# 성별 직업의 빈도수를 체크하여 상위 10개를 출력
welfare_copy %>%
filter(!is.na(job) & gender == 'male') %>%
group_by(job) %>%
summarise(count = n()) %>%
arrange(-count) %>%
head(10) -> male_top10
male_top10
# 성별 직업의 빈도수를 체크하여 상위 10개를 출력
welfare_copy %>%
filter(!is.na(job) & gender == 'male') %>%
group_by(job) %>%
summarise(count = n()) %>%
arrange(-count) %>%
head(10) -> male_top10
male_top10
# 성별 직업의 빈도수를 체크하여 상위 10개를 출력
welfare_copy %>%
filter(!is.na(job) & gender == 'male') %>%
group_by(job) %>%
summarise(count = n())
# 성별 직업의 빈도수를 체크하여 상위 10개를 출력
welfare_copy %>%
filter(!is.na(job) & gender == 'male')
# 성별 직업의 빈도수를 체크하여 상위 10개를 출력
welfare_copy %>%
filter(!is.na(job))
# 성별 직업의 빈도수를 체크하여 상위 10개를 출력
welfare_copy %>%
filter(& gender == 'male')
# 성별 직업의 빈도수를 체크하여 상위 10개를 출력
welfare_copy %>%
filter(gender == 'male')
ifelse(welfare_copy$gender == 1, 'male', 'female') -> welfare_copy$gender
arrange(-count) %>%
head(10) -> male_top10
welfare_copy %>%
filter(!is.na(job) & gender == 'male') %>%
group_by(job) %>%
summarise(count = n()) %>%
arrange(-count) %>%
head(10) -> male_top10
male_top10
welfare_copy %>%
filter(!is.na(job) & gender == 'female') %>%
group_by(job) %>%
summarise(count = n()) %>%
arrange(-count) %>%
head(10) -> female_top10
female_top10
welfare_copy %>%
mutate(age = 2015 - birth + 1) %>%
mutate(ageg = ifelse(age < 30, 'young',
ifelse(age < 60, 'middle', 'old'))) -> welfare_copy
welfare_copy %>%
mutate(group_marriage = ifelse(marriage == 3, 'divorce', 'marriage'))
welfare_copy %>%
mutate(group_marriage = ifelse(marriage == 3, 'divorce', 'marriage')) -> welfare_copy
# 연령대 별 이혼율 출력 시각화
ggplot(data = welfare_copy,
aes(x=ageg, y= group_marriage)) +
geom_col()
# 연령대 별 이혼율 출력 시각화
ggplot(data = welfare_copy,
aes(x=ageg, color= group_marriage)) +
geom_col()
# 연령대 별 이혼율 출력 시각화
ggplot(data = welfare_copy,
aes(x=ageg, y= group_marriage)) +
geom_col()
# 연령대 별 이혼율 출력 시각화
table(welfare_copy$group_marriage)
table(welfare_copy$group_marriage)[1]
ggplot(data = welfare_copy,
aes(x=ageg, y= table(welfare_copy$group_marriage))) +
geom_col()
ggplot(data = welfare_copy,
aes(x=ageg, y= table(group_marriage))) +
geom_col()
# 연령대 별 이혼율 출력 시각화
table(welfare_copy$group_marriage)
# 연령대 별 이혼율 출력 시각화
table(welfare_copy$group_marriage) -> marr
geom_col()
# 연령대 별 이혼율 출력 시각화
table(welfare_copy$group_marriage) -> marr
geom_col()
ggplot(data = marr,
aes()) +
geom_col()
ggplot(data = marr)+
geom_col()
data.frame(marr)
df = data.frame(marr)
ggplot(data = df,
aes(x= Var1,y= Freq)) +
geom_col()
# 연령대 별 이혼율 출력 시각화
welfare_copy %>% group_by(ageg) %>% summarise(sum=n())
# 연령대 별 이혼율 출력 시각화
welfare_copy$group_marriage %>% group_by(ageg) %>% summarise(sum=n())
# 연령대 별 이혼율 출력 시각화
welfare_copy %>%
filter(group_marriage)
source("C:/Users/Sejin/Documents/GitHub/2023prac/sav.R", echo=TRUE)
# 연령대 별 이혼율 출력 시각화
welfare_copy %>% group_by(ageg) %>% summarise(sum_group = n())
# 연령대 별 이혼율 출력 시각화
View(welfare_copy)
welfare_copy %>%
mutate(age = 2015 - birth + 1) %>%
mutate(ageg = ifelse(age < 30, 'young',
ifelse(age < 60, 'middle', 'old'))) -> welfare_copy
welfare_copy %>%
mutate(group_marriage = ifelse(marriage == 3, 'divorce', 'marriage')) -> welfare_copy
# 연령대 별 이혼율 출력 시각화
View(welfare_copy)
# 이혼
welfare_copy$group_marriage
# 이혼
table[welfare_copy$group_marriage]
# 이혼
table(welfare_copy$group_marriage)
# 이혼 + 기혼
table(welfare_copy$group_marriage)[1] + table(welfare_copy$group_marriage)[2]
welfare_copy %>%
group_by(ageg) %>%
summarise(count = n())
welfare_copy %>%
group_by(ageg) %>%
summarise(count = n()) -> ageg_count
welfare_copy %>%
group_by(ageg, group_marriage) %>%
summarise(count = n()) -> ageg_count
ageg_count
ageg_count %>% table[count]
table(ageg_count$group_marriage =='divorce')
welfare_copy %>%
group_by(ageg, group_marriage) %>%
summarise(count = n()) %>%
mutate(total_count = sum(count))
welfare_copy %>%
group_by(ageg, group_marriage) %>%
summarise(count = n()) %>%
mutate(total_count = sum(count)) %>%
mutate(pct = count/total_count)*100)
welfare_copy %>%
group_by(ageg, group_marriage) %>%
summarise(count = n()) %>%
mutate(total_count = sum(count)) %>%
mutate(pct = count/total_count*100)
ifelse(welfare_copy$marriage == 3, 'divorce',
ifelse(welfare_copy$marriage == 1, 'marriage', NA))
ifelse(welfare_copy$marriage == 3, 'divorce',
ifelse(welfare_copy$marriage == 1, 'marriage', NA)) -> welfare_copy$group_marriage
welfare_copy %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(count = n()) %>%
mutate(total_count = sum(count)) %>%
mutate(pct = count/total_count*100)
